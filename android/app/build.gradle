plugins {
    id "com.android.application"
//    id "com.google.gms.google-services"
    id "kotlin-android"

    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"

}
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '1'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.0'
//}
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.teaching.app.teaching"

    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.teaching.app.teaching"
        minSdk = 21
        //noinspection OldTargetApi
        targetSdk = 34
        versionCode =1
        versionName =  "1.0.0"
        multiDexEnabled true

    }
    signingConfigs {
        release {
            keyAlias 'upload-keystore' // Replace with the actual key alias
            keyPassword 'dodo1311'
            storeFile file('/Users/tl/IdeaProjects/teaching/android/upload-keystore.jks') // Update with the path to your keystore
            storePassword 'dodo1311'
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.debug
//            signingConfig signingConfigs.release
            minifyEnabled true
//          useProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'


        }
}
}
flutter {
    source = "../.."
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
//    implementation(platform("com.google.firebase:firebase-bom:33.5.1"))
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.1.2'
    implementation("com.google.firebase:firebase-analytics")
    implementation 'androidx.multidex:multidex:2.0.1'
}